/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.empmanagement.screens;

import com.employeemanagement.common.Common;
import com.employeemanagement.models.Client;
import com.employeemanagement.models.CustomTableModel;
import com.employeemanagement.models.Employee;
import com.employeemanagement.models.ImageTableModel;
import com.empmanagement.persistence.IPersistence;
import com.empmanagement.persistence.Persistence;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import org.apache.commons.lang.StringUtils;

/**
 *
 * @author arup
 */
public class DeleteClient extends javax.swing.JFrame {
    
    
   IPersistence ip = Persistence.getInstance() ;
    Object data[][];
    MainFrame mainFrame = null;

    /**
     * Creates new form DeleteClient
     */
    public DeleteClient(MainFrame mainFrame) {
        initComponents();
        this.mainFrame = mainFrame;
        initOtherComponent();
        setTitle("Assigned Employees");
        setResizable(false);
        
    }
    
     public void initOtherComponent(){
     getActiveClient();
    }
    
     
     public void getActiveClient(){
         
        List<Client> clients = ip.getClients();        
        data = new Object[clients.size()][4];        
        for (int i = 0;i<clients.size();i++){
            data[i][0] = clients.get(i).getClient_id();
            data[i][1] = clients.get(i).getClient_name();
            data[i][2] = clients.get(i).getClient_mob1();
            data[i][3] =  false;               
        }
        
        String[] columnNames = {"ID", "Name","Address","Check"};
         //DefaultTableModel model = new DefaultTableModel(data, columnNames);
         DefaultTableModel model = new DefaultTableModel(data, columnNames);
        jTable1.setModel(model);
        jTable1.setShowVerticalLines(false);        
        jTable1.setPreferredScrollableViewportSize(jTable1.getPreferredSize());   
        jTable1.setRowMargin(2);
        jTable1.setRowHeight(20);   
     
     }
     
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){
            @Override
            public Class getColumnClass(int column) {
                switch (column) {
                    case 0:
                    return String.class;
                    case 1:
                    return String.class;
                    case 2:
                    return String.class;

                    default:
                    return Boolean.class;
                }
            }

            public Component prepareRenderer(TableCellRenderer renderer, int row, int column) {
                Component c = super.prepareRenderer(renderer, row, column);
                if (c instanceof JComponent) {
                    if(column <= 10 ){
                        //X is your particlur column number
                        JComponent jc = (JComponent) c;
                        String text = getValueAt(row, column).toString();

                        if(text.equalsIgnoreCase(""))
                        text = "NA";

                        jc.setToolTipText(text);
                    }
                }
                return c;
            };

        };
        jPanel2 = new javax.swing.JPanel();
        selectall = new javax.swing.JCheckBox();
        delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setAutoCreateRowSorter(true);
        jScrollPane1.setViewportView(jTable1);

        jPanel2.setBackground(new java.awt.Color(1, 1, 1));

        selectall.setForeground(new java.awt.Color(254, 254, 254));
        selectall.setText("Select ALL");
        selectall.setRequestFocusEnabled(false);
        selectall.setRolloverEnabled(false);
        selectall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectallActionPerformed(evt);
            }
        });

        delete.setText("delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(selectall, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectall)
                    .addComponent(delete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        
        
       int more =  JOptionPane.showConfirmDialog(null, "Do you really want to delete client?", "Confirm delete",
                                      JOptionPane.YES_NO_OPTION);
       
       
       if(more == 0){
        int noOfRow  = jTable1.getRowCount();
        List<String> clientIDs = new ArrayList<String>();
        
        String a = (String)jTable1.getValueAt(0, 0);
        
        for (int i=0;i<noOfRow ;i++){
        
           Boolean flag = (Boolean) jTable1.getValueAt(i, 3);
           
           if(flag) {
               String id = (String)jTable1.getValueAt(i, 0);
               clientIDs.add(id);
               System.out.println("ID : "+id);
           }    
        
        
        }
        
        
         IPersistence ip = Persistence.getInstance();
        Boolean flag = ip.deleteClient(clientIDs);
        
        if(flag){
            if(mainFrame != null){
            mainFrame.reloadTableData();
            mainFrame.reloadTableDataCompletedAssignment();
            mainFrame.reloadTableDataCurrentAssignment();
            
            }
            getActiveClient();
            JOptionPane.showMessageDialog(null, "Client Deleted");       
        }
        else{
        JOptionPane.showMessageDialog(new JFrame(), "Could not delete client !!!!!", "Delete client",
        JOptionPane.ERROR_MESSAGE);       
        
        }
       
       
       }
       
       else {
       
       
       }
        
        
        
       
        //String ids = StringUtils.join(clientIDs.toArray(), ",");
        
        
    }//GEN-LAST:event_deleteActionPerformed

    private void selectallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectallActionPerformed
        // TODO add your handling code here:
        boolean flag = selectall.isSelected();
        int noOfRow  = jTable1.getRowCount();
        
        
        for (int i=0;i<noOfRow ;i++){
        
            if(flag)
                jTable1.setValueAt(true, i, 3);
            
            else
                jTable1.setValueAt(false, i, 3);
        
        }
        
        //JOptionPane.showMessageDialog(null, String.valueOf(flag) );
        //JOptionPane.showMessageDialog(null, String.valueOf(noOfRow));
    }//GEN-LAST:event_selectallActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeleteClient(null).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JCheckBox selectall;
    // End of variables declaration//GEN-END:variables
}
